import React from 'react';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import { Separator } from '@/components/ui/separator';

interface ValidationData {
  elevatorPitch: string[];
  competitors: string[];
  majorRisk: string;
  marketSize?: string;
  userPersonas?: string[];
  gtmChannels?: string[];
  nextMilestones?: string[];
  reasoning?: string;
}

interface ValidationResultProps {
  data: ValidationData;
  showReasoning: boolean;
  isDeepDive: boolean;
}

export const ValidationResult = ({ data, showReasoning, isDeepDive }: ValidationResultProps) => {
  const exportToPDF = () => {
    const content = generateExportContent();
    
    // Create a blob with the content
    const blob = new Blob([content], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    
    // Create a temporary link to download
    const link = document.createElement('a');
    link.href = url;
    link.download = 'startup-validation-report.txt';
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    URL.revokeObjectURL(url);
  };

  const copyToClipboard = () => {
    const content = generateExportContent();
    navigator.clipboard.writeText(content);
  };

  const generateExportContent = () => {
    let content = "STARTUP IDEA VALIDATION REPORT\n";
    content += "Generated by Startup Idea Validator\n";
    content += "=".repeat(50) + "\n\n";
    
    content += "ELEVATOR PITCH:\n";
    data.elevatorPitch?.forEach((point, index) => {
      content += `${index + 1}. ${point}\n`;
    });
    
    content += "\nTOP COMPETITORS:\n";
    data.competitors?.forEach((competitor, index) => {
      content += `${index + 1}. ${competitor}\n`;
    });
    
    content += `\nMAJOR RISK:\n${data.majorRisk}\n`;
    
    if (isDeepDive) {
      if (data.marketSize) content += `\nMARKET SIZE:\n${data.marketSize}\n`;
      
      if (data.userPersonas) {
        content += "\nUSER PERSONAS:\n";
        data.userPersonas.forEach((persona, index) => {
          content += `${index + 1}. ${persona}\n`;
        });
      }
      
      if (data.gtmChannels) {
        content += "\nGO-TO-MARKET CHANNELS:\n";
        data.gtmChannels.forEach((channel, index) => {
          content += `${index + 1}. ${channel}\n`;
        });
      }
      
      if (data.nextMilestones) {
        content += "\nNEXT MILESTONES:\n";
        data.nextMilestones.forEach((milestone, index) => {
          content += `${index + 1}. ${milestone}\n`;
        });
      }
    }
    
    if (showReasoning && data.reasoning) {
      content += `\nAI REASONING:\n${data.reasoning}\n`;
    }
    
    return content;
  };

  return (
    <Card className="mt-6 p-6 bg-gradient-to-br from-blue-50 to-purple-50 border-blue-200">
      <div className="flex items-center justify-between mb-4">
        <h3 className="text-xl font-bold text-gray-800">
          {isDeepDive ? 'Deep Dive Analysis' : 'Quick Scan Results'}
        </h3>
        <div className="flex space-x-2">
          <Button 
            onClick={copyToClipboard}
            variant="outline" 
            size="sm"
            className="text-sm"
          >
            Copy Report
          </Button>
          <Button 
            onClick={exportToPDF}
            size="sm"
            className="bg-gradient-to-r from-purple-500 to-blue-500 hover:from-purple-600 hover:to-blue-600 text-sm"
          >
            Export Report
          </Button>
        </div>
      </div>

      <div className="grid gap-6">
        {/* Elevator Pitch */}
        <div>
          <h4 className="font-semibold text-lg mb-3 text-purple-800">üöÄ Elevator Pitch</h4>
          <ul className="space-y-2">
            {data.elevatorPitch?.map((point, index) => (
              <li key={index} className="flex items-start space-x-2">
                <span className="font-semibold text-purple-600">‚Ä¢</span>
                <span className="text-gray-700">{point}</span>
              </li>
            ))}
          </ul>
        </div>

        <Separator />

        {/* Competitors */}
        <div>
          <h4 className="font-semibold text-lg mb-3 text-blue-800">üè¢ Top Competitors</h4>
          <ul className="space-y-2">
            {data.competitors?.map((competitor, index) => (
              <li key={index} className="flex items-start space-x-2">
                <span className="font-semibold text-blue-600">{index + 1}.</span>
                <span className="text-gray-700">{competitor}</span>
              </li>
            ))}
          </ul>
        </div>

        <Separator />

        {/* Major Risk */}
        <div>
          <h4 className="font-semibold text-lg mb-3 text-red-800">‚ö†Ô∏è Major Risk</h4>
          <p className="text-gray-700 bg-red-50 p-3 rounded-lg border-l-4 border-red-400">
            {data.majorRisk}
          </p>
        </div>

        {/* Deep Dive Content */}
        {isDeepDive && (
          <>
            <Separator />
            
            {data.marketSize && (
              <div>
                <h4 className="font-semibold text-lg mb-3 text-green-800">üìä Market Size</h4>
                <p className="text-gray-700 bg-green-50 p-3 rounded-lg border-l-4 border-green-400">
                  {data.marketSize}
                </p>
              </div>
            )}

            {data.userPersonas && (
              <div>
                <h4 className="font-semibold text-lg mb-3 text-indigo-800">üë• User Personas</h4>
                <ul className="space-y-2">
                  {data.userPersonas.map((persona, index) => (
                    <li key={index} className="flex items-start space-x-2">
                      <span className="font-semibold text-indigo-600">{index + 1}.</span>
                      <span className="text-gray-700">{persona}</span>
                    </li>
                  ))}
                </ul>
              </div>
            )}

            {data.gtmChannels && (
              <div>
                <h4 className="font-semibold text-lg mb-3 text-orange-800">üì¢ Go-to-Market Channels</h4>
                <ul className="space-y-2">
                  {data.gtmChannels.map((channel, index) => (
                    <li key={index} className="flex items-start space-x-2">
                      <span className="font-semibold text-orange-600">{index + 1}.</span>
                      <span className="text-gray-700">{channel}</span>
                    </li>
                  ))}
                </ul>
              </div>
            )}

            {data.nextMilestones && (
              <div>
                <h4 className="font-semibold text-lg mb-3 text-teal-800">üéØ Next Milestones</h4>
                <ul className="space-y-2">
                  {data.nextMilestones.map((milestone, index) => (
                    <li key={index} className="flex items-start space-x-2">
                      <span className="font-semibold text-teal-600">{index + 1}.</span>
                      <span className="text-gray-700">{milestone}</span>
                    </li>
                  ))}
                </ul>
              </div>
            )}
          </>
        )}

        {/* AI Reasoning */}
        {showReasoning && data.reasoning && (
          <>
            <Separator />
            <div>
              <h4 className="font-semibold text-lg mb-3 text-gray-800">üß† AI Reasoning Process</h4>
              <div className="bg-gray-50 p-4 rounded-lg border border-gray-200">
                <p className="text-gray-600 text-sm italic">{data.reasoning}</p>
              </div>
            </div>
          </>
        )}
      </div>
    </Card>
  );
};
